# Fetch netcfg from pod config repository and push to ONOS once it is READY
{{ if .Values.config }}
{{ $configDir := "/config" }}
apiVersion: v1
kind: Pod
metadata:
  name: config
spec:
  serviceAccountName: {{ .Values.service_account_name }}
  initContainers:
    # Wait for ONOS to be fully ready
    - name: wait-onos
      image: bitnami/kubectl
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace              
        - name: INSTANCES
          # Need this to get around hyphenated name
          value: {{ index .Values "onos-classic" "replicas" | quote }}
        - name: LABEL_NAME
          value: {{ index .Values "onos-classic" "label_name" | quote }}
      command: ["sh", "-c", "until [ $INSTANCES -eq $(kubectl -n $NAMESPACE get --no-headers pods -lapp=$LABEL_NAME -o custom-columns=':.status.containerStatuses[0].ready' | grep true | wc -l) ]; do echo 'Waiting for ONOS'; sleep 5; done;" ]
    # Pull config from the git repository
    - name: config-getter
      image: alpine/git
      env:
        - name: USER
          valueFrom:
            secretKeyRef:
              name: git-secret
              key: username
        - name: PASSWD
          valueFrom:
            secretKeyRef:
              name: git-secret
              key: password
        - name: CFG_SERVER
          value: {{ .Values.config.server }}
        - name: CFG_REPO
          value: {{ .Values.config.repo }}
        {{ if .Values.config.review }}
        - name: CFG_REVIEW
          value: {{ .Values.config.review | quote }}
        {{ end }}
        {{ if .Values.config.patchset }}
        - name: CFG_PATCHSET
          value: {{ .Values.config.patchset | quote }}
        {{ end }}
      workingDir: {{ $configDir }}
      command: ["sh", "-c", "/usr/bin/onos-config"]
      volumeMounts:
        - name: config-dir
          mountPath: {{ $configDir }}
        - name: configmap-config
          mountPath: /usr/bin/onos-config
          subPath: onos-config
  containers:
    # Push config to ONOS REST API
    - name: config-setter
      image: curlimages/curl
      env:
        - name: USER
          valueFrom:
            secretKeyRef:
              name: onos-secret
              key: username
        - name: PASSWD
          valueFrom:
            secretKeyRef:
              name: onos-secret
              key: password
        - name: NETCFG_URL
          value: {{ .Values.config.netcfgUrl }}
        - name: CFG_FOLDER
          value: {{ .Values.config.folder }}
        - name: CFG_FILE
          value: {{ .Values.config.file }}
      workingDir: {{ printf "%s/%s" $configDir .Values.config.repo }}
      command: ["sh", "-c", "curl -v -u $USER:$PASSWD POST -H 'Content-Type: application/json' $NETCFG_URL -d@$CFG_FOLDER/$CFG_FILE"]
      volumeMounts:
        - name: config-dir
          mountPath: {{ $configDir }}
  volumes:
  - name: config-dir
    emptyDir: {}
  - name: configmap-config
    configMap:
      name: onos-config-scripts
      defaultMode: 0744
  restartPolicy: Never
{{ end }}
